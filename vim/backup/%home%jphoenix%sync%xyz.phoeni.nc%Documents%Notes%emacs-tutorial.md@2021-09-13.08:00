Emacs can apparently use graphical display as a powerpoint kind of thing, which is neat

emacs-no-x -- cli-only?  For Debian distros?

(What the fuck is "MSYS2" that you can use pacman on Windows?)

(Chocolatey?  Same question)

Menu and tool bar -- emacs in editor has a menu bar, and a lot of the entries have the keybinding associated with the item listed in the menu.  Good for helpful reminders.

Some of the menus are context-sensitive, changing depending on what "buffers" you're looking at

The menu and tool bars can both be disabled pretty easily

"We're running terminal emacs inside graphical emacs" what

A "window" in emacs is always a buffer, a pane.  They can be split in arbitrary ways to create interesting layouts.  Emacs calls them "frames."

"magit" package provides Git interface in Emacs buffer

"scratch" buffer is blank sheet of paper for taking notes or Lisp expressions
"messages" buffer is log messages/text written to echo area at bottom of screen
"warnings" buffer is self-explanatory

So you definitely need to keep square which buffer you're looking at/working on

EMACS Manual: "Using Multiple Buffers"

Bottom toolbar shows which buffer you're in, where you are in the buffer (percentage and line number), what type of file you're in.  In graphical all of that is clickable.  The big difference from other IDEs is you get one "mode line" per buffer rather than a global line

Of course the mode line is fully customizable.

"doom mode line" package (?)

Right below the mode line is the echo area.  Oop, prayer time.

The echo area is also a mini-buffer for prompts and suchlike

"It's a place at the bottom of the screen where things tend to happen"

### Commands

To run a command, hit M-x, which will bring up a prompt where you type the command to be run

Check:

- dired - file browser inside emacs
- calendar 
- eshell - bash clone written in emacs-lisp, works on every system
- tetris

M-x, then tab, shows all available commands

Emacs is almost an operating system on top of an operating system

### Major and Minor Modes

A major mode provides the primary functionality for a particular buffer and is usually activated based on the file extension of the opened file

Some buffers aren't files and have special functionality provided by major modes.  This is usually activated using a command, usually the name of the mode.  

The major mode is what we see on the mode line.  Only one per buffer.

"Fundamental" is the default, no-addons mode.

You can start any mode at any time, but results may vary.

Minor modes are extra functionality for a given buffer.  You can have many active on a particular buffer.  Some minor modes can be global, active in all buffers.  e.g. global-hl-line-mode

### Key Bindings

- C - Control
- M - Alt (Meta)
- S - Shift
- s - Super (Windows key)

You know how key bindings work.

Two main prefixes that have special meaning:

- C-x is prefix for all "primary" key bindings, like C-x C-f
- C-c is considered to be a combination of bindings created by active major and minor modes, or by the user

("which key" package shows possible commands in minibuffer)

### Opening and Saving Files

C-x C-f opens file search dialogue to open file
C-x C-s saves the file
C-x C-w writes the file to a different buffer "save as"

### Buffer Control

(C-x C-b switches buffers)

C-x b - switch buffers (TAB to list)
C-x C-b - list buffers

C-x -> or <- cycles through available buffers

### Text Manipulation

"Kill" (cut) first requires a selection.  Mark region using C-Spc and use the arrow keys to select the region, then C-w actually does the killing.  Killed text gets shifted to the "kill ring" (clipboard).  Pasting is "yanking," which is C-y.

You can also enable "normal" behavior (C-x/C-c/C-v) by activating CUA mode, which can be activated in the Options > Use CUA keys menu.

C-_ is undo, also C-/
C-g C-_ is redo, and if you keep pressing C-_ it'll keep redoing things.

### Cancelling Operations

C-g interrupts any active command and brings you to normal state.  This is how you back out of a minibuffer prompt, for example.  Might have to push multiple times to get back to normal state.  Try this keybinding before killing Emacs.

### More Key Bindings

Run command describe-bindings (M-x describe-bindings) for a full list.
